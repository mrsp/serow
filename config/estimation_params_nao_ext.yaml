#Robot Frames (CHECK URDF)
base_link: "base_link"
lfoot: "l_ankle"
rfoot: "r_ankle"
modelname: "/home/master/dp_ws/src/serow/share/urdf/nao.urdf"

#ROS Topic Names

useLegOdom: false
#odom_topic: "/vins_estimator/odometry" #only if useLegOdom is false
odom_topic: "/svo/odom"
imu_topic: "/imu0"
joint_state_topic: "/joint_states"
lfoot_force_torque_topic: "/nao_robot/LLeg/force_torque_states"
rfoot_force_torque_topic: "/nao_robot/RLeg/force_torque_states"


#Ground-Truth
ground_truth: false
ground_truth_odom_topic: "/gt"
ground_truth_com_topic: "/gt_com"


support_idx_provided: false
support_idx_topic: "/sp"

#To publish relative data
debug_mode: false


#TF from IMU to Body 
#For imu0 (external IMU)
T_B_A: [0, 0, 1, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 1]
T_B_G: [0, 0, 1, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0 ,0, 1]

#TF from F/T to Left Foot
T_FT_LL: [1, 0, 0, 0, 0, 1, 0, 0, 0, 0 , 1 , 0, 0, 0 ,0, 1]
#TF from F/T to Right Foot
T_FT_RL: [1, 0, 0, 0, 0, 1, 0, 0, 0, 0 , 1 , 0, 0, 0 ,0, 1]
#TF from External Odom to Body only if useLegOdom is false
T_B_P: [0, 1, 0, 0, -1, 0, 0, 0, 0, 0 ,1 ,0, 0, 0, 0, 1]
#T_B_P: [1, 0, 0, 0, 0, 1, 0, 0, 0, 0 ,1 ,0, 0, 0, 0, 1]

#ROS Topic Frequencies in Hz
imu_topic_freq: 100
joint_topic_freq: 100
fsr_topic_freq: 100  

##Schmitt Trigger - Contact Classifier
LLegUpThres: 20 #Schmitt Trigger High Threshold in Newtons (N)
LLegLowThres: 12 #Schmitt Trigger Low Threshold in Newtons (N)
LosingContact: 7
StrikingContact: 60

#Steady State Joint Kalman Filter (KF)
estimateJoints: true #Use a Steady State KF in every joint
joint_cutoff_freq: 4.0

#Mahony Filter for attitude
useMahony: true
Mahony_Kp: 1.0
Mahony_Ki: 0.0
#Madgwick Filter for attitude if useMahony is false
Madgwick_gain: 0.3
bias_max: 0
bias_may: 0
bias_maz: 0
bias_mgx: 0
bias_mgy: 0
bias_mgz: 0

#Leg Odometry Coefficients
Tau0: 1.0
Tau1: 1.0
#Complimentary Filter for Body Velocity  //Used in Leg Odometry
useCF: false
freqvmin: 0.1
freqvmax: 2.5

#Choose Integration Method
#Euler Method for faster execution if false the Runge-Kutta 4 method will be used 
useEuler: true

#Rigid body Extended Kalman Filter (EKF)
#To estimate:
# 3-D Body Position/Velocity
# 3-D IMU-Biases

#Process Noise STDs
accelerometer_bias_random_walk: 0.005 #m/s^2
gyroscope_bias_random_walk: 4.1884e-05 # rad/s
accelerometer_noise_density:  0.5 #m/s^2 
gyroscope_noise_density: 0.2 #rad/s 

#VO Measuremets
#Odometry Measurement Noise std:
#odom_position_noise_density: 1.0e-02
#odom_orientation_noise_density: 1.0e-02

#Odom Measurements
odom_position_noise_density: 1.0e-02
odom_orientation_noise_density: 1.0e-02

#RP Lidar Odom
#odom_position_noise_density: 0.0111
#odom_orientation_noise_density: 0.0145

velocity_noise_density: 1.0

#IMU Initial Biases - Biases are substracted!
bias_ax: 0
bias_ay: 0
bias_az: 0
bias_gx: 0
bias_gy: 0
bias_gz: 0




#Filter Params
gravity: 9.80665 #gravity constant (m/s^2)
medianWindow: 10

# CoM Extended Kalman Filter (EKF)
# To estimate:
# CoM 3-D Position/Velocity
# 3-D External Forces on the CoM
estimateCoM: true   #Use the CoM EKF

#---------------------------------------------#
#Specify the rest only if estimateCoM is true!!
#---------------------------------------------#


#Process Noise
com_position_random_walk: 1.0e-4 #in m
com_velocity_random_walk: 5.0e-3 #in m/s
external_force_random_walk: 1.0      #in Newtons
#Measurment Noise
com_position_noise_density: 1.0e-04  #CoM position in m
com_acceleration_noise_density: 2.5e-01 #CoM Acceleration in m/s^2
#Initial errors in External Forces
bias_fx: 0.0  #in Newtons
bias_fy: 0.0
bias_fz: 0.0
#Gyro LPF
useGyroLPF: false
#Cutt-off Frequencies
gyro_cut_off_freq: 10.0  #Only if useGyroLPF is true
#Gyro Moving Average Filter
maWindow: 14 #buffer size, the larger the smoother and delayed the signal, only if useGyroLPF is false
#Filter Params
mass: 5.182530  #robot mass
Ixx : 0.0050623407587  #torso inertia around x
Iyy : 0.0048801358789  #torso inetria around y
Izz : 0.001610300038   #torso inertia around z
